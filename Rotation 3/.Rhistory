library(ggExtra)
library(ggmap)
library(gridExtra)
library(grid)
library(magick)
library(ggrepel)
library(reshape2)
library(lubridate)
library(openair)
library(plyr)
library(dplyr)
library(purrr)
library(rlist)
library(trend)
options(max.print = 1000000)
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes(df1[2], df[4])) + geom_jitter(stat = "identity", fill = "grey") +
theme_classic() + labs(title = splitsens[i])
library(ggplot2)
plotdf1 <- ggplot(df1, aes(df1[2], df[4])) + geom_jitter(stat = "identity", fill = "grey") +
theme_classic() + labs(title = splitsens[i])
install.packages("ggplot2")
library(ggplot2)
detach("package:dplyr", unload = TRUE)
library(dplyr)
remove.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(tidyverse)
library(adklakedata)
library(ggplot2)
library(maps)
library(rgdal)
library(ggsn)
library(ggExtra)
library(ggmap)
library(gridExtra)
library(grid)
library(magick)
library(ggrepel)
library(reshape2)
library(lubridate)
library(openair)
library(plyr)
library(dplyr)
library(purrr)
library(rlist)
library(trend)
options(max.print = 1000000)
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes(df1[2], df[4])) + geom_jitter(stat = "identity", fill = "grey") +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
plotdf1 <- ggplot(df1, aes(df1[2], df[4])) + geom_count() +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
for (i in unique(lakenames))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes(df1[2], df1[4])) + geom_count(stat = "identity", fill = "grey") +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
}
dev.off()
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes(df1[2], df1[4])) + geom_count(stat = "identity", fill = "grey") +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
View(df1)
df1[4]
plotdf1 <- ggplot(df1, aes(df1[2], df1[4])) + geom_count() +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
plotdf1 <- ggplot(df1, aes(df1[2], df1[4])) + geom_jitter() +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
gg <- ggplot(df1, aes(df1[2],df1[4]))
View(gg)
gg + geom_point()
gg + geom_bar()
plotdf1 <- ggplot(df1) + geom_jitter(aes(df1[2], df1[4])) +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
df1
df1[2]
df1[4]
geom_jitter()
geom_jitter(df1)
geom_jitter(df1,aes(df1[2], df1[4]))
geom_jitter(aes(df1[2], df1[4]))
gg <- geom_jitter(aes(df1[2], df1[4]))
gg
print(gg)
ggplot(df1) + gg
View(df1)
gg <- ggplot(df1)
gg <- ggplot(df1) + geom_point()
gg
df1[2,4]
df1[2,4,1]
df1[2:4]
df1[2][4]
df1([2][4])
df1([2,2])
df1[2,2]
gg <- ggplot(df1) + geom_point(aes(df1[1], df[4]))
gg
gg <- ggplot(sensdf) + geom_point(aes(sensdf[1], sensdf[4]))
gg
View(sensdf)
gg <- ggplot(sensdf) + geom_point(aes(sensdf[3], sensdf[4]))
gg
gg <- ggplot(sensdf) + geom_point(aes(x = sensdf[3], y = sensdf[4]))
gg
sensdf[3]
gg <- ggplot(from2017, aes(x = lake.name, y = DOC.mg.L.1)) +
geom_boxplot(size = 1, alpha = .3, color = "blue", shape = "0", outlier.colour = "#12095e", outlier.shape = 18, outlier.alpha = .25, outlier.size = 3) +
geom_boxplot(data = to2017, size = 1, alpha = .1, color = "orange", shape = "1", outlier.colour = "#b05b12", outlier.shape = 16, outlier.alpha = .25, outlier.size = 2) +
ylim(0,25) +
theme(plot.title = element_text(face = "bold", size = 22), axis.text=element_text(size=20),axis.text.x = element_text(angle = 60, hjust = 1, size = 9, face = "bold"), axis.title = element_text(size = 20)) +
ggtitle("DOC - Orange is pre-switch - Blue is post ") +
xlab("Lake Name") +
ylab("DOC in mg/L") #+
#stat_boxplot(alpha= .2) +
#stat_boxplot(geom = 'errorbar', alpha = .2) +
#scale_colour_gradient(
#  low = "#fadda2",
#  high = "#0f3b59",
#  space = "Lab",
#  na.value = "grey50"
#)
gg
gg <- ggplot(sensdf, aes(sensdf$lake, sensdf$trend)) + geom_point()
gg
plotdf1 <- ggplot(df1, aes(df1[2], df1[4])) + geom_jitter() +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
gg <- ggplot(sensdf, aes(sensdf[1], sensdf$trend)) + geom_point()
gg
plotdf1 <- ggplot(df1, aes(x = [2], y = [4] )) + geom_jitter() +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
plotdf1 <- ggplot(df1, aes_string(x = df1[2], y = df1[4] )) + geom_jitter() +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
View(df1)
View(splitsens)
df1 = as.data.frame(splitsens[i])
i = 1
df1 = as.data.frame(splitsens[i])
View(df1)
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
splitsens[i]
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = "splitsens[i]")
print(plotdf1)
dev.off()
dev.off()
pdf("plots.pdf", onefile = TRUE, height = 20)
i = "ARBUTUS LAKE"
for (i in unique(lakenames))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
}
dev.off()
df1 = as.data.frame(splitsens[i])
i
i = "ARBUTUS LAKE"
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = splitsens[i])
print(plotdf1)
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
i = "ARBUTUS LAKE"
for (i in unique(lakenames))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
for (i in unique(lakenames))
print(i)
for (i in unique(splitsens))
print(i)
for (i in unique(splitsens[1]))
print(i)
for (i in unique(splitsens[,1]))
i
splitsens[,1]
splitsens[1,]
splitsens[1,1]
splitsens[1]
splitsens[,1]
splitsens[1:60]
splitsens[1:54]
splitsens[1:57]
for (i in unique(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
dev.off()
for (i in unique(lakenames))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
View(plotdf1)
for (i in unique(splitsens[1:56]))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
splitsens[4]
for (i in length(splitsens)
df1 = as.data.frame(splitsens[i])
for (i in length(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
dev.off()
pdf("plots.pdf", onefile = TRUE, height = 20)
i = "ARBUTUS LAKE"
for (i in length(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
dev.off()
plotdf1
dev.off()
i = 1
for (i in length(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
dev.off()
plotdf1
pdf("plots.pdf", onefile = TRUE)
i = 1
for (i in length(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
dev.off()
dev.off()
pdf("plots.pdf", onefile = TRUE)
i = 1
for (i in length(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
}
dev.off()
dev.off()
pdf("plots.pdf", onefile = TRUE)
for (i in length(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
}
dev.off()
plotdf1
pdf("plots.pdf", onefile = TRUE)
for (i in length(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
plotdf1
}
dev.off()
dev.off()
plotdf1
i = 44
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
plotdf1
pdf("plots.pdf", onefile = TRUE)
for (i in seq(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
plotdf1
}
dev.off()
dev.off()
plotdf1
pdf("plots.pdf", onefile = TRUE)
for (i in length(splitsens[1:5]))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
plotdf1
}
dev.off()
dev.off()
length(splitsens[1:5])
pdf("plots.pdf", onefile = TRUE)
for (i in length(splitsens[1:5]))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_jitter() +
theme_classic() + labs(title = names(splitsens[i]))
plotdf1
}
dev.off()
pdf("plots.pdf", onefile = TRUE)
for (i in length(splitsens[1:5]))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_point() +
theme_classic() + labs(title = names(splitsens[i]))
plotdf1
}
dev.off()
pdf("sens.pdf")
for (i in length(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_point() +
theme_classic() + labs(title = names(splitsens[i]))
}
print(plotdf1)
dev.off()
pdf("sens.pdf", onefile = TRUE)
for (i in length(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_point() +
theme_classic() + labs(title = names(splitsens[i]))
}
print(plotdf1)
dev.off()
pdf("sens.pdf", onefile = TRUE)
for (i in length(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_point() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
dev.off()
dev.off()
for (i in length(splitsens))
{
pdf("sens.pdf", onefile = TRUE)
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_point() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
print(plotdf1)
dev.off()
for (i in length(splitsens))
{
pdf("sens.pdf", onefile = TRUE)
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_point() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
dev.off()
pdf("sens.pdf", onefile = TRUE)
for (i in length(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_point() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
dev.off()
i = 5
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_point() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
pdf("sens.pdf", onefile = TRUE)
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_point() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
i = 6
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_point() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
dev.off()
##### Sen's Slope for every lake ######
lakeMonAvg <- read.csv("LakeMonAvg_DOC.csv")
i=1
for (i in length(splitsens))
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_point() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
dev.off()
dev.off()
dev.off()
pdf("sens.pdf", onefile = TRUE)
for (i in 1:56)
{
df1 = as.data.frame(splitsens[i])
plotdf1 <- ggplot(df1, aes_string(x = names(df1[2]), y = names(df1[4]))) + geom_point() +
theme_classic() + labs(title = names(splitsens[i]))
print(plotdf1)
}
dev.off()
sensdf <- sensdf %>%
order(sensdf, sensdf$month)
View(sensdf)
library(tidyverse)
library(adklakedata)
library(ggplot2)
library(maps)
library(rgdal)
library(ggsn)
library(ggExtra)
library(ggmap)
library(gridExtra)
library(grid)
library(magick)
library(ggrepel)
library(reshape2)
library(lubridate)
library(openair)
library(plyr)
library(dplyr)
library(purrr)
library(rlist)
library(trend)
options(max.print = 1000000)
sensdf <- sensdf %>%
group_by(sensdf$month)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
View(fullmerge)
View(lakenames)
View(lakeMonAvg)
rm(list = ls(all.names = TRUE))
library(tidyverse)
library(adklakedata)
library(ggplot2)
library(maps)
library(rgdal)
library(ggsn)
library(ggExtra)
library(ggmap)
library(gridExtra)
library(grid)
library(magick)
library(ggrepel)
library(reshape2)
library(lubridate)
library(openair)
library(plyr)
library(dplyr)
library(purrr)
library(rlist)
library(trend)
options(max.print = 1000000)
climate_data_glenn_falls <- read.csv('glenn_falls_airport.csv')
climate_data_glenn_falls <- read.csv("glenn_falls_airport.csv")
climate_data_glenn_falls <- read.csv("glenn_falls_airport.csv")
head(climate_data_glenn_falls)
View(climate_data_glenn_falls)
climate_data_glenn_falls <- read.csv("cornell.csv")
climate_data_glenn_falls <- read.csv("cornell.csv")
climate_data_cornell <- read.csv("cornell.csv")
head(climate_data_cornell)
View(climate_data_cornell)
climate_data_cornell <- read.csv("cornell.csv")
head(climate_data_cornell)
climate_data_cornell <- read.csv("cornell.csv")
climate_data_cornell <- read.csv("cornell.csv")
head(climate_data_cornell)
